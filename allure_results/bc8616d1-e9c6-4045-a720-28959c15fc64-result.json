{"name": "Проверка создания заказа с ингредиентами авторизованным пользователем", "status": "broken", "statusDetails": {"message": "ValueError: too many values to unpack (expected 2)", "trace": "self = <tests.test_create_order.TestCreateOrder object at 0x0000016262CDCA10>\n\n    @allure.title('Проверка создания заказа с ингредиентами авторизованным пользователем')\n    def test_create_order_with_ingredients_authorized_user(self):\n        existing_user = {'email': ExistingUser.email,\n                         'password': ExistingUser.password,\n                         'name': ExistingUser.name\n                         }\n        login = requests.post(ApiURLS.LOGIN_URL, data=existing_user)\n        token = login.json()[\"accessToken\"]\n>       response = requests.post(ApiURLS.ORDER_URL, headers={'Authorization': token}, data=Burger.burger_1)\n\ntests\\test_create_order.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\requests\\api.py:115: in post\n    return request(\"post\", url, data=data, json=json, **kwargs)\n.venv\\Lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n.venv\\Lib\\site-packages\\requests\\sessions.py:575: in request\n    prep = self.prepare_request(req)\n.venv\\Lib\\site-packages\\requests\\sessions.py:484: in prepare_request\n    p.prepare(\n.venv\\Lib\\site-packages\\requests\\models.py:370: in prepare\n    self.prepare_body(data, files, json)\n.venv\\Lib\\site-packages\\requests\\models.py:558: in prepare_body\n    body = self._encode_params(data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = ['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa71']\n\n    @staticmethod\n    def _encode_params(data):\n        \"\"\"Encode parameters in a piece of data.\n    \n        Will successfully encode parameters when passed as a dict or a list of\n        2-tuples. Order is retained if data is a list of 2-tuples but arbitrary\n        if parameters are supplied as a dict.\n        \"\"\"\n    \n        if isinstance(data, (str, bytes)):\n            return data\n        elif hasattr(data, \"read\"):\n            return data\n        elif hasattr(data, \"__iter__\"):\n            result = []\n>           for k, vs in to_key_val_list(data):\nE           ValueError: too many values to unpack (expected 2)\n\n.venv\\Lib\\site-packages\\requests\\models.py:121: ValueError"}, "start": 1724853866822, "stop": 1724853867201, "uuid": "7a42c868-29aa-4d5b-bc90-381d9bb21717", "historyId": "48682518472ece00a11cec2b64d706fe", "testCaseId": "48682518472ece00a11cec2b64d706fe", "fullName": "tests.test_create_order.TestCreateOrder#test_create_order_with_ingredients_authorized_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "Lex_Legion"}, {"name": "thread", "value": "30608-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}