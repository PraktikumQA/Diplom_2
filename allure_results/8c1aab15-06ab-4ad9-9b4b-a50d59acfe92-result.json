{"name": "Проверка создания заказа с неверным хешем ингредиентов авторизованным пользователем", "status": "failed", "statusDetails": {"message": "AssertionError: assert (200 == 500)\n +  where 200 = <Response [200]>.status_code", "trace": "self = <tests.test_create_order.TestCreateOrder object at 0x0000016262CDC2F0>\n\n    @allure.title('Проверка создания заказа с неверным хешем ингредиентов авторизованным пользователем')\n    def test_create_order_wrong_hash_authorized_user(self):\n        existing_user = {'email': ExistingUser.email,\n                         'password': ExistingUser.password,\n                         'name': ExistingUser.name\n                         }\n        payload = {'ingredients': [Burger.burger_3]}\n        login = requests.post(ApiURLS.LOGIN_URL, data=existing_user)\n        token = login.json()[\"accessToken\"]\n        response = requests.get(ApiURLS.ORDER_URL, headers={'Authorization': token}, data=payload)\n>       assert (response.status_code == 500\n                and response.json() == {'success': False, 'message': Responses.INVALID_INGREDIENT})\nE       assert (200 == 500)\nE        +  where 200 = <Response [200]>.status_code\n\ntests\\test_create_order.py:43: AssertionError"}, "start": 1724853867730, "stop": 1724853868537, "uuid": "134db712-9612-40df-8d96-d3d5da85fb07", "historyId": "9d43531581b08b8279bebc148eb17d19", "testCaseId": "9d43531581b08b8279bebc148eb17d19", "fullName": "tests.test_create_order.TestCreateOrder#test_create_order_wrong_hash_authorized_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "Lex_Legion"}, {"name": "thread", "value": "30608-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}